#!/bin/bash

echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ HTTP 404"
echo "===================================="

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

print_status() { echo -e "${GREEN}[OK]${NC} $1"; }
print_error() { echo -e "${RED}[ERROR]${NC} $1"; }
print_info() { echo -e "${YELLOW}[INFO]${NC} $1"; }

if [[ $EUID -ne 0 ]]; then
   print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å sudo"
   exit 1
fi

print_info "=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê ==="

echo ""
print_info "1. –õ–æ–≥–∏ hromkz –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
journalctl -u hromkz --no-pager -n 10
echo ""

print_info "2. –õ–æ–≥–∏ Nginx:"
tail -n 10 /var/log/nginx/error.log
echo ""

print_info "3. –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:"
ps aux | grep -E "(gunicorn|hromkz)" | grep -v grep
echo ""

print_info "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ socket —Ñ–∞–π–ª–∞:"
ls -la /var/www/logistics.xrom.org/run/
echo ""

print_info "5. –¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:"
if curl -s http://127.0.0.1:5000 > /dev/null 2>&1; then
    print_status "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é"
else
    print_error "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é"
fi

print_info "6. –¢–µ—Å—Ç socket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
if curl -s --unix-socket /var/www/logistics.xrom.org/run/hromkz.sock http://localhost/ > /dev/null 2>&1; then
    print_status "Socket —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    print_error "Socket –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

print_info "=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ==="

cd /var/www/logistics.xrom.org

print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤..."
if [[ ! -f "app.py" ]]; then
    print_error "app.py –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
    exit 1
fi

if [[ ! -f "main.py" ]]; then
    print_error "main.py –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
    exit 1
fi

if [[ ! -f "routes.py" ]]; then
    print_error "routes.py –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
    exit 1
fi

print_info "–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sudo -u hromkz bash -c 'cd /var/www/logistics.xrom.org && source .env && timeout 10 ./venv/bin/python -c "
try:
    from app import app
    print(\"Flask app OK\")
    with app.app_context():
        print(\"App context OK\")
        from models import Employee, Request
        print(\"Models OK\")
except Exception as e:
    print(f\"Error: {e}\")
    import traceback
    traceback.print_exc()
"'

print_info "–ü—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ Flask –¥–ª—è —Ç–µ—Å—Ç–∞..."
sudo -u hromkz bash -c 'cd /var/www/logistics.xrom.org && source .env && timeout 5 ./venv/bin/python main.py &'
sleep 3

# –¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
if curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:5000 | grep -q "200\|404\|500"; then
    print_status "Flask –æ—Ç–≤–µ—á–∞–µ—Ç –ø—Ä–∏ –ø—Ä—è–º–æ–º –∑–∞–ø—É—Å–∫–µ"
    pkill -f "python main.py" || true
else
    print_error "Flask –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø—Ä–∏ –ø—Ä—è–º–æ–º –∑–∞–ø—É—Å–∫–µ"
    pkill -f "python main.py" || true
fi

print_info "–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞..."
cat > test_routes.py << 'EOF'
from flask import Flask

app = Flask(__name__)

@app.route('/')
def index():
    return "Hello from Hrom KZ Logistics!"

@app.route('/test')
def test():
    return "Test route works!"

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
EOF

print_info "–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ main_test.py..."
cat > main_test.py << 'EOF'
from test_routes import app

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
EOF

chown hromkz:www-data test_routes.py main_test.py

print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ systemd –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
cat > /etc/systemd/system/hromkz-test.service << 'EOF'
[Unit]
Description=Hrom KZ Test Application
After=network.target

[Service]
Type=exec
User=hromkz
Group=www-data
WorkingDirectory=/var/www/logistics.xrom.org
Environment="PATH=/var/www/logistics.xrom.org/venv/bin"
ExecStart=/var/www/logistics.xrom.org/venv/bin/gunicorn --workers 1 --bind unix:/var/www/logistics.xrom.org/run/hromkz.sock --umask 0007 main_test:app
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload

print_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ..."
systemctl stop hromkz
systemctl start hromkz-test

sleep 5

print_info "–¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
HTTP_CODE=$(curl -I -s -o /dev/null -w "%{http_code}" http://logistics.xrom.org 2>/dev/null || echo "000")

if [[ "$HTTP_CODE" == "200" ]]; then
    print_status "–ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–±–ª–µ–º–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–æ–¥–µ"
    
    print_info "–í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º..."
    systemctl stop hromkz-test
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º main.py - —É–±–∏—Ä–∞–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫
    cat > main.py << 'EOF'
from app import app

# –¢–æ–ª—å–∫–æ —ç–∫—Å–ø–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è gunicorn, –±–µ–∑ if __name__ == '__main__'
EOF

    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º app.py - —É–±–∏—Ä–∞–µ–º –ø—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫
    sed -i '/if __name__ == .__main__.:/,$d' app.py

    systemctl start hromkz
    sleep 5
    
    HTTP_CODE=$(curl -I -s -o /dev/null -w "%{http_code}" http://logistics.xrom.org 2>/dev/null || echo "000")
    
    if [[ "$HTTP_CODE" == "200" ]]; then
        print_status "üéâ –ò–°–ü–†–ê–í–õ–ï–ù–û! –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    else
        print_error "–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        print_info "–î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏:"
        journalctl -u hromkz --no-pager -n 15
    fi
else
    print_error "–î–∞–∂–µ –ø—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–±–ª–µ–º–∞ –≤ Nginx –∏–ª–∏ —Å–∏—Å—Ç–µ–º–µ"
    systemctl stop hromkz-test
    systemctl start hromkz
    
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    nginx -t
    
    print_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx..."
    systemctl restart nginx
    sleep 3
    
    HTTP_CODE=$(curl -I -s -o /dev/null -w "%{http_code}" http://logistics.xrom.org 2>/dev/null || echo "000")
    print_info "HTTP –∫–æ–¥ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Nginx: $HTTP_CODE"
fi

# –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
rm -f /etc/systemd/system/hromkz-test.service
rm -f test_routes.py main_test.py
systemctl daemon-reload

print_info "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
HTTP_CODE=$(curl -I -s -o /dev/null -w "%{http_code}" http://logistics.xrom.org 2>/dev/null || echo "000")

case "$HTTP_CODE" in
    "200")
        print_status "üéâ –°–ê–ô–¢ –†–ê–ë–û–¢–ê–ï–¢!"
        echo ""
        echo "URL: http://logistics.xrom.org"
        echo "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: http://logistics.xrom.org/register"
        ;;
    "404")
        print_error "–í—Å–µ –µ—â–µ HTTP 404 - –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"
        ;;
    "502")
        print_error "HTTP 502 - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        ;;
    *)
        print_error "HTTP –∫–æ–¥: $HTTP_CODE"
        ;;
esac

print_info "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"