#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –•—Ä–æ–º –ö–ó –Ω–∞ VPS
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –•—Ä–æ–º –ö–ó –Ω–∞ logistics.xrom.org"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if [[ $EUID -eq 0 ]]; then
   print_warning "–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –æ—Ç root. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è hromkz..."
   
   # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è hromkz –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
   if ! id "hromkz" &>/dev/null; then
       adduser --disabled-password --gecos "" hromkz
       usermod -aG sudo hromkz
       print_status "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å hromkz —Å–æ–∑–¥–∞–Ω"
   fi
   
   # –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è hromkz
   cp "$0" /home/hromkz/deploy.sh
   chown hromkz:hromkz /home/hromkz/deploy.sh
   chmod +x /home/hromkz/deploy.sh
   
   print_status "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è hromkz..."
   su - hromkz -c "/home/hromkz/deploy.sh"
   exit 0
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å–∏—Å—Ç–µ–º—ã
print_status "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
sudo apt update
sudo apt install -y python3 python3-pip python3-venv nginx postgresql postgresql-contrib certbot python3-certbot-nginx git ufw

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è hromkz
if ! id "hromkz" &>/dev/null; then
    print_error "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å hromkz –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π: sudo adduser hromkz"
    exit 1
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL
print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL..."
sudo -u postgres psql << EOF
DO \$\$
BEGIN
   IF NOT EXISTS (SELECT FROM pg_database WHERE datname = 'hromkz_logistics') THEN
      CREATE DATABASE hromkz_logistics;
   END IF;
END
\$\$;

DO \$\$
BEGIN
   IF NOT EXISTS (SELECT FROM pg_user WHERE usename = 'hromkz_user') THEN
      CREATE USER hromkz_user WITH ENCRYPTED PASSWORD 'HromKZ_2025_SecurePass!';
   END IF;
END
\$\$;

GRANT ALL PRIVILEGES ON DATABASE hromkz_logistics TO hromkz_user;
ALTER USER hromkz_user CREATEDB;
EOF

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
DEPLOY_DIR="/var/www/logistics.xrom.org"
if [ -d "$DEPLOY_DIR" ]; then
    print_status "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞..."
    cd $DEPLOY_DIR
    git pull origin main
else
    print_status "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."
    sudo -u hromkz git clone https://github.com/your-repo/hromkz-logistics.git $DEPLOY_DIR
    cd $DEPLOY_DIR
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
sudo -u hromkz python3 -m venv venv
sudo -u hromkz ./venv/bin/pip install --upgrade pip

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
if [ -f "requirements_prod.txt" ]; then
    sudo -u hromkz ./venv/bin/pip install -r requirements_prod.txt
else
    print_warning "requirements_prod.txt –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã..."
    sudo -u hromkz ./venv/bin/pip install Flask Flask-SQLAlchemy Flask-WTF WTForms Werkzeug email-validator psycopg2-binary gunicorn requests SQLAlchemy
fi

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
sudo -u hromkz tee $DEPLOY_DIR/.env > /dev/null << EOF
DATABASE_URL=postgresql://hromkz_user:HromKZ_2025_SecurePass!@localhost/hromkz_logistics
SESSION_SECRET=$(openssl rand -hex 32)
FLASK_ENV=production
FLASK_APP=main.py
EOF

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
print_status "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
cd $DEPLOY_DIR
sudo -u hromkz bash -c 'source venv/bin/activate && source .env && python -c "from app import app, db; app.app_context().push(); db.create_all()"'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd —Å–ª—É–∂–±—ã
print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd —Å–ª—É–∂–±—ã..."
sudo tee /etc/systemd/system/hromkz.service > /dev/null << EOF
[Unit]
Description=Gunicorn instance to serve Hrom KZ Logistics
After=network.target

[Service]
User=hromkz
Group=www-data
WorkingDirectory=$DEPLOY_DIR
Environment="PATH=$DEPLOY_DIR/venv/bin"
EnvironmentFile=$DEPLOY_DIR/.env
ExecStart=$DEPLOY_DIR/venv/bin/gunicorn --workers 3 --bind unix:$DEPLOY_DIR/hromkz.sock -m 007 main:app
ExecReload=/bin/kill -s HUP \$MAINPID
Restart=always

[Install]
WantedBy=multi-user.target
EOF

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx
print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
sudo tee /etc/nginx/sites-available/logistics.xrom.org > /dev/null << EOF
server {
    listen 80;
    server_name logistics.xrom.org;

    location = /favicon.ico { access_log off; log_not_found off; }
    
    location /static/ {
        alias $DEPLOY_DIR/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:$DEPLOY_DIR/hromkz.sock;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–∞–π—Ç–∞ Nginx
sudo ln -sf /etc/nginx/sites-available/logistics.xrom.org /etc/nginx/sites-enabled/
sudo rm -f /etc/nginx/sites-enabled/default

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
sudo nginx -t

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
sudo chown -R hromkz:www-data $DEPLOY_DIR
sudo chmod -R 755 $DEPLOY_DIR

# –ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±
print_status "–ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±..."
sudo systemctl daemon-reload
sudo systemctl start hromkz
sudo systemctl enable hromkz
sudo systemctl restart nginx

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞..."
sudo ufw --force enable
sudo ufw allow ssh
sudo ufw allow 'Nginx Full'

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
print_status "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."

# –°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
sudo -u hromkz tee /home/hromkz/backup_db.sh > /dev/null << 'EOF'
#!/bin/bash
BACKUP_DIR="/home/hromkz/backups"
DATE=$(date +%Y%m%d_%H%M%S)
mkdir -p $BACKUP_DIR

export PGPASSWORD="HromKZ_2025_SecurePass!"
pg_dump -h localhost -U hromkz_user hromkz_logistics > $BACKUP_DIR/hromkz_$DATE.sql

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
find $BACKUP_DIR -name "hromkz_*.sql" -mtime +7 -delete

echo "Backup completed: $BACKUP_DIR/hromkz_$DATE.sql"
EOF

sudo chmod +x /home/hromkz/backup_db.sh

# –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
sudo -u hromkz tee /home/hromkz/update_app.sh > /dev/null << 'EOF'
#!/bin/bash
cd /home/hromkz/hromkz-logistics
echo "Pulling latest changes..."
git pull origin main

echo "Activating virtual environment..."
source venv/bin/activate

echo "Installing/updating dependencies..."
if [ -f "requirements_prod.txt" ]; then
    pip install -r requirements_prod.txt
fi

echo "Restarting application..."
sudo systemctl restart hromkz

echo "Application updated successfully!"
EOF

sudo chmod +x /home/hromkz/update_app.sh

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π..."
sudo -u hromkz crontab - << 'EOF'
# –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ 2:00
0 2 * * * /home/hromkz/backup_db.sh >> /home/hromkz/backup.log 2>&1
EOF

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–ª—É–∂–±
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–ª—É–∂–±..."
systemctl is-active --quiet hromkz && echo "‚úÖ hromkz service: running" || echo "‚ùå hromkz service: stopped"
systemctl is-active --quiet nginx && echo "‚úÖ nginx service: running" || echo "‚ùå nginx service: stopped"
systemctl is-active --quiet postgresql && echo "‚úÖ postgresql service: running" || echo "‚ùå postgresql service: stopped"

print_status "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS –∑–∞–ø–∏—Å—å A –¥–ª—è logistics.xrom.org –Ω–∞ IP —Å–µ—Ä–≤–µ—Ä–∞"
echo "2. –ü–æ–ª—É—á–∏—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: sudo certbot --nginx -d logistics.xrom.org"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç: http://logistics.xrom.org"
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "- –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: /home/hromkz/update_app.sh"
echo "- –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: /home/hromkz/backup_db.sh"
echo "- –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: sudo journalctl -u hromkz -f"
echo "- –õ–æ–≥–∏ Nginx: sudo tail -f /var/log/nginx/error.log"
echo ""
echo "üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ http://logistics.xrom.org"