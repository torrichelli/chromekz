#!/bin/bash

echo "üêç –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è"
echo "=============================================="

set -e

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

print_status() { echo -e "${GREEN}[OK]${NC} $1"; }
print_error() { echo -e "${RED}[ERROR]${NC} $1"; }
print_info() { echo -e "${YELLOW}[INFO]${NC} $1"; }

if [[ $EUID -ne 0 ]]; then
   print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å sudo: sudo bash fix_python_environment.sh"
   exit 1
fi

cd /var/www/logistics.xrom.org

print_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
systemctl stop hromkz || true

print_info "–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤..."
sudo -u hromkz ./venv/bin/pip install --upgrade pip
sudo -u hromkz ./venv/bin/pip install flask flask-sqlalchemy flask-wtf wtforms werkzeug email-validator psycopg2-binary gunicorn requests sqlalchemy

print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python —Ñ–∞–π–ª–æ–≤..."
sudo -u hromkz ./venv/bin/python -m py_compile app.py
sudo -u hromkz ./venv/bin/python -m py_compile main.py
sudo -u hromkz ./venv/bin/python -m py_compile models.py
sudo -u hromkz ./venv/bin/python -m py_compile forms.py
sudo -u hromkz ./venv/bin/python -m py_compile routes.py

print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
if sudo -u hromkz bash -c 'cd /var/www/logistics.xrom.org && source .env && ./venv/bin/python -c "from app import app; print(\"Flask app OK\")"'; then
    print_status "Flask –∏–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω"
else
    print_error "–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    
    print_info "–°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ app.py –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
    cat > app_test.py << 'EOF'
from flask import Flask

app = Flask(__name__)
app.secret_key = "test-secret-key"

@app.route('/')
def index():
    return "Hello, World! Flask is working!"

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5000)
EOF
    
    chown hromkz:www-data app_test.py
    
    print_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    if sudo -u hromkz ./venv/bin/python -c "import app_test; print('Minimal Flask OK')"; then
        print_status "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        
        print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ systemd –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
        cat > /etc/systemd/system/hromkz-test.service << 'EOF'
[Unit]
Description=Hrom KZ Test Service
After=network.target

[Service]
User=hromkz
Group=www-data
WorkingDirectory=/var/www/logistics.xrom.org
Environment="PATH=/var/www/logistics.xrom.org/venv/bin"
ExecStart=/var/www/logistics.xrom.org/venv/bin/gunicorn --workers 1 --bind unix:/var/www/logistics.xrom.org/run/hromkz.sock --umask 0007 app_test:app
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF
        
        systemctl daemon-reload
        systemctl enable hromkz-test
        systemctl start hromkz-test
        
        sleep 3
        
        if systemctl is-active --quiet hromkz-test; then
            print_status "–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
            print_info "–ü—Ä–æ–±–ª–µ–º–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–æ–¥–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        else
            print_error "–î–∞–∂–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è"
            journalctl -u hromkz-test --no-pager -n 5
        fi
        
        systemctl stop hromkz-test || true
        systemctl disable hromkz-test || true
    fi
fi

print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if sudo -u postgres psql -d hromkz_logistics -c "SELECT 1;" > /dev/null 2>&1; then
    print_status "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"
else
    print_error "–ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"
    
    print_info "–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    sudo -u postgres psql << 'EOF'
DROP DATABASE IF EXISTS hromkz_logistics;
CREATE DATABASE hromkz_logistics;
GRANT ALL PRIVILEGES ON DATABASE hromkz_logistics TO hromkz_user;
\q
EOF
    print_status "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞"
fi

print_info "–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
systemctl daemon-reload
systemctl start hromkz

sleep 5

if systemctl is-active --quiet hromkz; then
    print_status "üéâ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    
    HTTP_CODE=$(curl -I -s -o /dev/null -w "%{http_code}" http://logistics.xrom.org || echo "000")
    if [[ "$HTTP_CODE" == "200" ]]; then
        print_status "üéâ –°–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç: http://logistics.xrom.org"
    else
        print_error "–°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω, –Ω–æ —Å–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ($HTTP_CODE)"
    fi
else
    print_error "–°–µ—Ä–≤–∏—Å –≤—Å–µ –µ—â–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è"
    print_info "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
    journalctl -u hromkz --no-pager -n 10
fi

print_info "–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
echo "  journalctl -u hromkz -f"
echo "  sudo -u hromkz bash -c 'cd /var/www/logistics.xrom.org && source .env && ./venv/bin/python main.py'"